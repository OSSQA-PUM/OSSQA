version: '3.4'

services:
  ossqa-database:
    image: ossqa-database
    build:
      context: .
      dockerfile: src/backend/database/Dockerfile
    env_file: .env
    ports:
      - "5090:5090"
    expose:
      - "5090"

  ossqa-prototype:
    image: ossqa-prototype
    build:
      context: .
      dockerfile: ./src/prototype/Dockerfile
    env_file: .env

  ossqa-tests:
    image: ossqa-tests
    build:
      context: .
      dockerfile: ./src/tests/Dockerfile
    env_file: .env

  ossqa-cmd:
    image: ossqa-cmd
    build:
      context: .
      dockerfile: src/frontend/CMD/Dockerfile
    depends_on:
      - ossqa-main
    env_file: .env
    stdin_open: true
    tty: true

  ossqa-web:
    image: ${DOCKER_REGISTRY-}ossqa-web
    build:
      context: .
      dockerfile: src/frontend/OSSQAWebAPI/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - ossqa-main

  ossqa-main:
    image: ossqa
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - ossqa-database
    env_file: .env
    ports:
      - "98:98"
    expose:
      - "5090"
      - "8080"
      - "98"
    command: [ "python", "frontend_communication.py", "&" ]
